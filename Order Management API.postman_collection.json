{
	"info": {
		"_postman_id": "b0bb8b65-de7c-4488-b537-ab643dc4d6f3",
		"name": "Order Management API",
		"description": "Complete API collection: Authentication, Products, and Orders",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18186021",
		"_collection_link": "https://hazem-team.postman.co/workspace/Own~3fd13080-1771-4cf2-8adb-2605cd14f719/collection/18186021-b0bb8b65-de7c-4488-b537-ab643dc4d6f3?action=share&source=collection_link&creator=18186021"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Registration successful\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.message).to.include(\"registered successfully\");",
									"});",
									"",
									"pm.test(\"Token saved automatically\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data.token).to.exist;",
									"    pm.collectionVariables.set(\"auth_token\", response.data.token);",
									"    console.log(\"âœ… Token saved:\", response.data.token.substring(0, 20) + \"...\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hazem Gdara\",\n    \"email\": \"hazemA@gmail.com\",\n    \"password\": \"password\",\n    \"password_confirmation\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register new user and get authentication token"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hazem Gdara\",\n    \"email\": \"hazem@gmail.com\",\n    \"password\": \"password\",\n    \"password_confirmation\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:52:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Email already exists\",\n    \"errors\": {\n        \"email\": [\n            \"Email already exists\"\n        ]\n    }\n}"
						},
						{
							"name": "Done",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hazem Gdara\",\n    \"email\": \"hazemA@gmail.com\",\n    \"password\": \"password\",\n    \"password_confirmation\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:52:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"User registered successfully\",\n    \"data\": {\n        \"user\": {\n            \"id\": 2,\n            \"name\": \"Hazem Gdara\",\n            \"email\": \"hazemA@gmail.com\",\n            \"email_verified_at\": null,\n            \"created_at\": \"2025-07-12T19:52:39.000000Z\",\n            \"updated_at\": \"2025-07-12T19:52:39.000000Z\"\n        },\n        \"token\": \"9|TCFxDddIEZC9IE3B9LnN8Oa73wmR9KwZkHM0PZPA6f1abdd6\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"hazem@gmail.com\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login user and get authentication token"
					},
					"response": [
						{
							"name": "Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"hazem@gmail.com\",\n    \"password\": \"passworda\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:52:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid credentials\"\n}"
						},
						{
							"name": "Done",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"hazem@gmail.com\",\n    \"password\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:53:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Login successful\",\n    \"data\": {\n        \"user\": {\n            \"id\": 1,\n            \"name\": \"Hazem Gdara\",\n            \"email\": \"hazem@gmail.com\",\n            \"email_verified_at\": null,\n            \"created_at\": \"2025-07-12T18:49:41.000000Z\",\n            \"updated_at\": \"2025-07-12T18:49:41.000000Z\"\n        },\n        \"token\": \"10|eLJPOYD9C5Dvr3V2I0ed1CdWYFmdHfZnGdJOhNh14437c11b\"\n    }\n}"
						}
					]
				},
				{
					"name": "Logout User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Logout successful\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.message).to.include(\"Logout successful\");",
									"});",
									"",
									"// Clear token after logout",
									"pm.collectionVariables.set(\"auth_token\", \"\");",
									"console.log(\"âœ… Token cleared after logout\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout user and revoke authentication token"
					},
					"response": [
						{
							"name": "Done",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/auth/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:54:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Logout successful\"\n}"
						}
					]
				}
			],
			"description": "User authentication endpoints"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Products retrieved successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.message).to.include(\"Products retrieved successfully\");",
									"});",
									"",
									"pm.test(\"Response has products array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log(\"ðŸ“¦ Found\", response.data.length, \"products\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Get all products (requires authentication)"
					},
					"response": [
						{
							"name": "Done",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:54:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Products retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"test\",\n            \"price\": 999.99,\n            \"created_at\": \"2025-07-12T19:16:50.000000Z\",\n            \"updated_at\": \"2025-07-12T19:16:50.000000Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"test\",\n            \"price\": 999.999,\n            \"created_at\": \"2025-07-12T19:17:18.000000Z\",\n            \"updated_at\": \"2025-07-12T19:17:18.000000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Product created successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.message).to.include(\"Product created successfully\");",
									"});",
									"",
									"pm.test(\"Product data is correct\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.have.property('id');",
									"    pm.expect(response.data.name).to.equal('Gaming Laptop');",
									"    pm.expect(response.data.price).to.equal(1299.99);",
									"    console.log(\"âœ… Created product ID:\", response.data.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Nespresso\",\n    \"price\": 1.2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Create a gaming laptop product"
					},
					"response": [
						{
							"name": "Done",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Nespresso\",\n    \"price\": 1.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:56:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Product created successfully\",\n    \"data\": {\n        \"name\": \"Nespresso\",\n        \"price\": 1.2,\n        \"updated_at\": \"2025-07-12T19:56:29.000000Z\",\n        \"created_at\": \"2025-07-12T19:56:29.000000Z\",\n        \"id\": 3\n    }\n}"
						},
						{
							"name": "Name Required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n    \"price\": 1.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:56:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Product name is required\",\n    \"errors\": {\n        \"name\": [\n            \"Product name is required\"\n        ]\n    }\n}"
						},
						{
							"name": "price > 0",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Nespresso\",\n    \"price\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/products",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Unprocessable Content",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:57:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Product price must be greater than 0\",\n    \"errors\": {\n        \"price\": [\n            \"Product price must be greater than 0\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "Product management endpoints"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get All Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Orders retrieved successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.message).to.include(\"Orders retrieved successfully\");",
									"});",
									"",
									"pm.test(\"Response has orders array\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.data).to.be.an('array');",
									"    console.log(\"ðŸ›’ Found\", response.data.length, \"orders\");",
									"    ",
									"    if (response.data.length > 0) {",
									"        const order = response.data[0];",
									"        pm.expect(order).to.have.property('products');",
									"        pm.expect(order).to.have.property('total_price');",
									"        pm.expect(order).to.have.property('products_details');",
									"        console.log(\"âœ… Order includes product details and total price\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Get all orders with associated products and total price"
					},
					"response": [
						{
							"name": "Done",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/orders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:59:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Orders retrieved successfully\",\n    \"data\": [\n        {\n            \"id\": 1,\n            \"products\": [\n                1\n            ],\n            \"total_price\": 999.99,\n            \"created_at\": \"2025-07-12T19:50:57.000000Z\",\n            \"updated_at\": \"2025-07-12T19:50:57.000000Z\",\n            \"products_details\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"test\",\n                    \"price\": 999.99,\n                    \"created_at\": \"2025-07-12T19:16:50.000000Z\",\n                    \"updated_at\": \"2025-07-12T19:16:50.000000Z\"\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"products\": [\n                1,\n                2,\n                3\n            ],\n            \"total_price\": 2001.19,\n            \"created_at\": \"2025-07-12T19:58:46.000000Z\",\n            \"updated_at\": \"2025-07-12T19:58:46.000000Z\",\n            \"products_details\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"test\",\n                    \"price\": 999.99,\n                    \"created_at\": \"2025-07-12T19:16:50.000000Z\",\n                    \"updated_at\": \"2025-07-12T19:16:50.000000Z\"\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"test\",\n                    \"price\": 999.999,\n                    \"created_at\": \"2025-07-12T19:17:18.000000Z\",\n                    \"updated_at\": \"2025-07-12T19:17:18.000000Z\"\n                },\n                {\n                    \"id\": 3,\n                    \"name\": \"Nespresso\",\n                    \"price\": 1.2,\n                    \"created_at\": \"2025-07-12T19:56:29.000000Z\",\n                    \"updated_at\": \"2025-07-12T19:56:29.000000Z\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Order created successfully\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});",
									"",
									"pm.test(\"Multiple products order\", function () {",
									"    const response = pm.response.json();",
									"    const order = response.data;",
									"    ",
									"    pm.expect(order.products).to.have.lengthOf(3);",
									"    pm.expect(order.products_details).to.have.lengthOf(3);",
									"    ",
									"    console.log(\"âœ… Multi-product order created\");",
									"    console.log(\"ðŸ’° Total Price:\", order.total_price);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"products\": [1, 2, 3]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Create order with multiple products (IDs 1, 2, 3)"
					},
					"response": [
						{
							"name": "Done",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"products\": [1, 2, 3]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/orders",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Host",
									"value": "localhost:8000"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/8.2.18"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Sat, 12 Jul 2025 19:58:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Order created successfully\",\n    \"data\": {\n        \"products\": [\n            1,\n            2,\n            3\n        ],\n        \"total_price\": 2001.189,\n        \"updated_at\": \"2025-07-12T19:58:46.000000Z\",\n        \"created_at\": \"2025-07-12T19:58:46.000000Z\",\n        \"id\": 2,\n        \"products_details\": [\n            {\n                \"id\": 1,\n                \"name\": \"test\",\n                \"price\": 999.99,\n                \"created_at\": \"2025-07-12T19:16:50.000000Z\",\n                \"updated_at\": \"2025-07-12T19:16:50.000000Z\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"test\",\n                \"price\": 999.999,\n                \"created_at\": \"2025-07-12T19:17:18.000000Z\",\n                \"updated_at\": \"2025-07-12T19:17:18.000000Z\"\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nespresso\",\n                \"price\": 1.2,\n                \"created_at\": \"2025-07-12T19:56:29.000000Z\",\n                \"updated_at\": \"2025-07-12T19:56:29.000000Z\"\n            }\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "Order management endpoints"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		}
	]
}